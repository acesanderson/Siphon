from pydantic import BaseModel, Field
from Siphon.data.URI import URI
from Siphon.data.Metadata import Metadata
from Siphon.enrich.enrich import enrich_content

class SyntheticData(BaseModel):
    """
    AI-generated enrichments, applied as a "finishing step" to the content.
    """

    title: str = Field(
        default="", description="Title of the content, either extracted or generated"
    )
    description: str = Field(
        default="", description="Short description or summary of the content"
    )
    summary: str = Field(default="", description="Detailed summary of the content")
    topics: list[str] = Field(
        default_factory=list,
        description="List of topics or keywords associated with the content, an area liable to change with cluster analyses.",
    )
    entities: list[str] = Field(
        default_factory=list,
        description="List of entities (people, places, organizations) mentioned in the content.",
    )

    @classmethod
    def from_llm_context(cls, llm_context: str, uri: URI, metadata: Metadata) -> "SyntheticData":
        """
        Create an instance of SyntheticData from a string context, typically generated by an LLM.
        """
        # This is a placeholder for actual parsing logic
        # return cls(
        #     title="Extracted Title",
        #     description="Extracted Description",
        #     summary="Detailed Summary based on LLM context",
        #     topics=["example_topic1", "example_topic2"],
        #     entities=["entity1", "entity2"]
        # )
        raise NotImplementedError("LLM context parsing not implemented yet.")
